---
- name: Openshift Origin On oVirt
  hosts: localhost
  connection: local
  gather_facts: false


  vars_files:
    - vars.yaml
    - user_vars.yaml

  pre_tasks:
    - fail:
        msg: this env var must be set but is not
      when: lookup('env', item) == ""
      with_items:
        - "ENGINE_IP"
        - "ENGINE_URL"
        - "ENGINE_USER"
        - "ENGINE_PASS"

    - name: Log in to oVirt
      ovirt_auth:
        url: "{{ engine_url }}"
        username: "{{ engine_user }}"
        password: "{{ engine_password }}"
        ca_file: "{{ engine_cafile | default(omit) }}"
        insecure: "{{ engine_insecure | default(true) }}"
      tags:
        - always
    - name: check template existence, to spare the download and upload of the qcow image
      ovirt_templates_facts:
        auth: "{{ ovirt_auth }}"
        pattern: "name={{ template_name }} and storage.name={{ rhv_data_storage }}"
      tags: always

  roles:
    - role: oVirt.image-template
      when: not ovirt_templates
    - role: oVirt.vm-infra

  tasks:
    - ovirt_nics_facts:
        auth: "{{ ovirt_auth }}"
        vm: master0.example.com
        name: nic*
    - debug:
        msg: '{{ ovirt_nics[0].reported_devices[0].ips | json_query("[?version==`v4`]") | map(attribute="address") | list }}'

    - shell: 'echo {{ item }} master0.example.com >> /etc/hosts'
      with_items: '{{ ovirt_nics[0].reported_devices[0].ips | json_query("[?version==`v4`]") | map(attribute="address") | list }}'


  post_tasks:
    - name: Logout from oVirt
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
      tags:
        - always

- import_playbook: /root/setup_dns.yaml
- import_playbook: /root/openshift-ansible/playbooks/prerequisites.yml
- import_playbook: /root/openshift-ansible/playbooks/openshift-node/network_manager.yml
- import_playbook: /root/openshift-ansible/playbooks/deploy_cluster.yml
- import_playbook: /root/deploy_flex.yaml
