[workstation]
localhost ansible_connection=local

[workstation:vars]
qcow_url=https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1809.qcow2c
template_name=centos7
rhv_cluster=Default
rhv_data_storage=data
root_ssh_key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

[all:vars]
engine_ip="{{ lookup('env', 'ENGINE_IP') }}"
engine_url="{{ lookup('env', 'ENGINE_URL') }}"
engine_user="{{ lookup('env', 'ENGINE_USER') }}"
engine_password="{{ lookup('env', 'ENGINE_PASS') }}"
engine_insecure=true
openshift_ovirt_all_in_one=True
app_dns_prefix=apps
public_hosted_zone=example.com
openshift_ovirt_dns_zone="{{ public_hosted_zone }}"
openshift_web_console_install=true
openshift_master_overwrite_named_certificates=true
openshift_master_cluster_hostname="openshift-master.{{ public_hosted_zone }}"
openshift_master_cluster_public_hostname="openshift-public-master.{{ public_hosted_zone }}"
openshift_master_default_subdomain="{{ app_dns_prefix }}.{{ public_hosted_zone }}"
openshift_public_hostname="{{openshift_master_cluster_public_hostname}}"
openshift_deployment_type=origin
openshift_disable_check=memory_availability,disk_availability,docker_image_availability
canonical_registry=index.docker.io
openshift_service_catalog_image_version="{{ openshift_image_tag }}"

openshift_registry_selector='node-registry=true'
openshift_router_selector='node-router=true'

[OSEv3:vars]
# General variables
debug_level=2
containerized=False
ansible_ssh_user=root
os_firewall_use_firewalld=True
openshift_deployment_type=origin
openshift_enable_excluders=false
openshift_install_examples=false
openshift_clock_enabled=true
openshift_debug_level="{{ debug_level }}"
openshift_node_debug_level="{{ node_debug_level | default(debug_level,true) }}"
osn_storage_plugin_deps=[]
openshift_master_bootstrap_auto_approve=true
openshift_master_bootstrap_auto_approver_node_selector={"node-role.kubernetes.io/master":"true"}
osm_controller_args={"experimental-cluster-signing-duration": ["20m"]}
osm_default_node_selector="node-role.kubernetes.io/compute=true"
openshift_enable_service_catalog=False

# Docker
#container_runtime_docker_storage_setup_device=/dev/vdb
container_runtime_docker_storage_type=overlay2
openshift_docker_use_system_container=False

# ETCD
openshift_hosted_etcd_storage_kind=nfs
openshift_hosted_etcd_storage_nfs_options="*(rw,root_squash,sync,no_wdelay)"
openshift_hosted_etcd_storage_nfs_directory=/opt/osev3-etcd
openshift_hosted_etcd_storage_volume_name=etcd-vol2
openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=1100M
openshift_hosted_etcd_storage_labels={'storage': 'etcd'}

# ANSIBLE BROKER
ansible_service_broker_etcd_image_prefix=quay.io/coreos/
ansible_service_broker_registry_type=quay
ansible_service_broker_registry_name=quay.io
ansible_service_broker_registry_url=https://quay.io
ansible_service_broker_registry_user=
ansible_service_broker_registry_password=
ansible_service_broker_registry_organization=rgolangh
ansible_service_broker_registry_tag=latest
ansible_service_broker_registry_whitelist=[.*-apb$]
ansible_service_broker_registry_blacklist=[.*automation-broker-apb$]

[OSEv3:children]
nodes
masters
etcd

# TOTO use openshift_ovirt role and the groups will be populated dynamically
[masters]
master0.example.com openshift_node_group_name="node-config-all-in-one" openshift_schedulable=true
[etcd]
master0.example.com
[nodes]
master0.example.com openshift_hostname=master0.example.com openshift_node_group_name="node-config-all-in-one"
[nfs]
master0.example.com
