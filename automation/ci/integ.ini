[workstation]
localhost ansible_connection=local

[workstation:vars]
qcow_url=https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1805.qcow2c
template_name=centos7
image_path="{{ lookup('env', 'HOME') }}/{{ template_name }}.qcow2c"
rhv_cluster=Default
rhv_data_storage=data
root_ssh_key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

[all:vars]
engine_ip="{{ lookup('env', 'ENGINE_IP') }}"
engine_url="{{ lookup('env', 'ENGINE_URL') }}"
engine_user="{{ lookup('env', 'ENGINE_USER') }}"
engine_password="{{ lookup('env', 'ENGINE_PASS') }}"
engine_insecure=true
#skipping ca for the CI just for simplicity
#engine_cafile=../ca.pem
app_dns_prefix=apps
public_hosted_zone=example.com
#load_balancer_hostname=lb.{{ public_hosted_zone }}
openshift_web_console_install=false
openshift_master_overwrite_named_certificates=true
openshift_master_cluster_hostname="openshift-master.{{ public_hosted_zone }}"
openshift_master_cluster_public_hostname="openshift-public-master.{{ public_hosted_zone }}"
openshift_master_default_subdomain="{{ app_dns_prefix }}.{{ public_hosted_zone }}"
openshift_public_hostname="{{openshift_master_cluster_public_hostname}}"
openshift_examples_modify_imagestreams=true
openshift_deployment_type=origin
openshift_disable_check=memory_availability,disk_availability,docker_image_availability
canonical_registry=index.docker.io
#oreg_url="{{ canonical_registry }}/openshift3/ose-${component}:${version}"
#__ansible_service_broker_image_prefix="{{ canonical_registry }}/openshift3/ose-"
#__openshift_service_catalog_image_prefix="{{ canonical_registry }}/openshift3/ose-"
#__ansible_service_broker_etcd_image_prefix="{{ canonical_registry }}"/rhel7/
#__ansible_service_broker_registry_url="{{ canonical_registry }}"
openshift_image_tag=v3.9.0
openshift_service_catalog_image_version="{{ openshift_image_tag }}"
#container_images=["openshift/origin:{{ openshift_image_tag }}", "openshift/node:{{ openshift_image_tag }}", "openshift/openvswitch:{{ openshift_image_tag }}", "openshift/origin-service-catalog:{{ openshift_image_tag }}", "openshift/origin-web-console:{{ openshift_image_tag }}", "ansibleplaybookbundle/origin-ansible-service-broker:latest", "quay.io/coreos/etcd:latest", "registry.fedoraproject.org/latest/etcd"]

openshift_web_console_nodeselector={'region':'infra'}
openshift_registry_selector='node-registry=true'
openshift_router_selector='node-router=true'


[OSEv3:vars]
# General variables
debug_level=2
containerized=true
ansible_ssh_user=root
os_firewall_use_firewalld=True
openshift_image_tag=v3.9.0
openshift_deployment_type=origin
openshift_enable_excluders=false
openshift_install_examples=false
openshift_clock_enabled=true
openshift_debug_level="{{ debug_level }}"
openshift_master_cluster_method=native
openshift_node_debug_level="{{ node_debug_level | default(debug_level,true) }}"
osn_storage_plugin_deps=[]

# Need this for installing flex and provisioner using apb. Not a must though.
openshift_enable_service_catalog=True

# Docker
container_runtime_docker_storage_setup_device=/dev/vdb
container_runtime_docker_storage_type=overlay2
openshift_docker_use_system_container=False
openshift_node_local_quota_per_fsgroup=512Mi
openshift_use_system_containers=False

# Pod Networking
os_sdn_network_plugin_name=redhat/openshift-ovs-networkpolicy

# ANSIBLE BROKER
openshift_hosted_etcd_storage_kind=nfs
openshift_hosted_etcd_storage_nfs_options="*(rw,root_squash,sync,no_wdelay)"
openshift_hosted_etcd_storage_nfs_directory=/opt/osev3-etcd
openshift_hosted_etcd_storage_volume_name=etcd-vol2
openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=1100M
openshift_hosted_etcd_storage_labels={'storage': 'etcd'}

ansible_service_broker_refresh_interval=20s
ansible_service_broker_registry_whitelist=[".*-apb$"]
ansible_service_broker_local_registry_whitelist=[".*-apb$"]
ansible_service_broker_image_prefix=ansibleplaybookbundle/origin-
ansible_service_broker_image_tag=latest
ansible_service_broker_etcd_image_prefix=quay.io/coreos/
ansible_service_broker_etcd_image_tag=latest

# Load Balancer Config
#openshift_loadbalancer_additional_frontends=[{"name":"apps-http","option":"tcplog","binds":["*:80"],"default_backend":"apps-http"}, {"name":"apps-https","option":"tcplog","binds": ["*:443"],"default_backend":"apps-http"}]
#openshift_loadbalancer_additional_backends=[{"name":"apps-http","balance":"source","servers":[{"name":"infra0","address":"{{groups['infras'].0 }}:80","opts":"check"}]}]

[OSEv3:children]
nodes
masters
etcd
#lb

[masters]
master0.example.com openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'zone': 'default', 'node-router': 'true', 'node-registry': 'true'}"
[etcd]
master0.example.com openshift_hostname=etcd.example.com
[infras]
master0.example.com
#[lb]
#"master0.{{ public_hosted_zone }}"
[nodes]
master0.example.com openshift_node_labels="{'region': 'infra', 'zone': 'default', 'node-router': 'true', 'node-registry': 'true'}" openshift_hostname=master0.example.com
[nfs]
master0.example.com
[laptop]
freak.usersys.redhat.com
